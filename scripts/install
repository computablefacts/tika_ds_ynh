#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Docker must be in Swarm mode
if [[ "$(docker info --format '{{.Swarm.LocalNodeState}}')" == "inactive" ]]; then
    docker swarm init --advertise-addr lo
fi

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config

yunohost service add $app --description="$app" --log="/var/log/$app/$app.log" --test_status "docker stack ls | grep $app"

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding the Docker Swarm file..." --weight=1

ynh_add_config --template="stack.yaml" --destination="$data_dir/stack.yaml"
ynh_add_config --template=".env" --destination="$data_dir/.env"

# Create directories for all volumes in the stack file
# We use yq so we start by installing it if not already present. See: https://github.com/mikefarah/yq/#install
if ! command -v "yq" > /dev/null 2>&1; then
    wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
fi
# Create a directory for each volume
# Volume should be a subdirectory of data dir, if not we return an error
for vol in $(yq '.services[].volumes[]' $data_dir/stack.yaml)
do
    if [[ "$vol" =~ ^\./(.*):(.*)$ ]]; then
        volume_name=${BASH_REMATCH[1]}
        # If no dots, we consider the volume name is a directory
        if [[ "$volume_name" =~ ^([^.]*)$ ]]; then
            mkdir -p "$data_dir/$volume_name"
            chown $app:$app "$data_dir/$volume_name"
        fi
    else
        echo "Wrong volume directory ($vol). It should be a relative directory eg. ./my_volume"
        exit 1
    fi
done

ynh_script_progression --message="Allow Docker containers to access MariaDB database..." --weight=1
# MySQL (MariaDB) should be accessible from all IP
ynh_add_config --template="mysql.cnf" --destination="/etc/mysql/mariadb.conf.d/90-$app.cnf"
chown root:root "/etc/mysql/mariadb.conf.d/90-$app.cnf"
chmod 644 "/etc/mysql/mariadb.conf.d/90-$app.cnf"
systemctl restart mariadb.service
# Firewall should allow Docker containers internal IP to reach MySQL
# Should be the same as ../hooks/post_iptable_rules
iptables -A INPUT -p tcp --dport 3306 -s 172.17.0.0/12 -j ACCEPT
iptables -A INPUT -p tcp --dport 3306 -s 192.168.0.0/16 -j ACCEPT
iptables -A INPUT -p tcp --dport 3306 -s 10.0.0.0/8 -j ACCEPT
# MySQL user should be allowed to connect from all hosts
ynh_mysql_execute_as_root --sql="RENAME USER '$db_user'@'localhost' TO '$db_user'@'%'"

#=================================================
# GENERIC FINALIZATION
#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --last
